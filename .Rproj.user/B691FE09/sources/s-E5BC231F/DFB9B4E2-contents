library(dplyr)
library(ggplot2)
library(ggpubr)
library(heatwaveR)
library(tidyverse)
library(lubridate)


glimpse(temp_daily)

date <- dmy(temp_daily$t)
glimpse(date)
temp_daily$year <- year(date)
temp_daily$month <- month(date)
glimpse(year)

temp_daily <- 
  temp_daily %>% filter(!is.na(tMax))

temps <-
  temp_daily %>% filter(month == "1" | month == "2" | month == "12")
View(temps)

# recode month index to force them into the same year
temps$month <- recode(temps$month, `2` = 3)
temps$month <- recode(temps$month, `1` = 2)
temps$month <- recode(temps$month, `12` = 1)


annual_max_mean <- temps %>% 
  group_by(year) %>% 
  summarise(mean = mean(tMax), na.rm = T)
View(annual_max_mean)

mean(annual_max_mean$mean)
amm <- mean(annual_max_mean$mean)
amm

summary(temps$tMax)
quantile(temps$tMax, c(0.90))


library(readr)
rainfall <- read_csv("C:/Users/szeteyka/OneDrive - Deakin University/PhD/Data/Rainfall/rainfall.csv")
plot(rainfall$Annual ~ rainfall$Year)

rain <-
  rainfall %>% filter(Year >= "1957")
View(rain)

mean(rain$Annual)
quantile(rain$Annual, c(0.10))


glimpse(annual_max_mean)
par(mfrow = c(1,1))
plot(annual_max_mean$mean~annual_max_mean$year, 
     xlab = "Year", ylab = "Annual Summer Mean Temperature", pch = 19)

ticks.1 <- seq(12,26,2)
ticks.2 <- seq(400, 1200, 200)

par(mar = c(5, 6, 3, 6))

plot(annual_max_mean$year, annual_max_mean$mean, yaxt="n", xlab="Year", 
ylab="Annual Summer Mean Temperature (°C)", col="#E69F00", pch = 19)
axis(2, at=ticks.1, col.ticks="#E69F00", col.axis="#E69F00")
mtext("Annual rainfall (mm)", side = 4, line = 3, cex = par("cex.lab"))
points(FFYy~FFYx, col = "black", add = TRUE, pch = 19)
abline(h = amm, col = "#009E73", add = TRUE, lwd = 3)
legend(("top"), legend = c("Bushfire Years", "Mean summer temperature"),
       col = c("black", "#009E73"), pch = c(19))
par(new=T)
plot(rain$Year, rain$Annual, type="l", yaxt="n", xlab = "", ylab = "", col="#56B4E9")
axis(4, at=ticks.2, col.ticks="#56B4E9", col.axis="#56B4E9")




points(rain$Annual~rain$Year, add = TRUE)
# abline(lm(annual_max_mean$mean~annual_max_mean$year), col = "red", lwd = 3)




fit <- lm(annual_max_mean$mean~annual_max_mean$year)
resid(fit)
hist(resid(fit))

shapiro.test(resid(fit)) 
#If p>0.05, distribution of residuals is probably normal
qqnorm(resid(fit))
qqline(resid(fit),lty=2) 
par(mfrow=c(2,2))
plot(fit)

FFYx <- c (1962, 1963, 1967, 1984, 1998, 2003, 2009, 2011)
FFYy <- c(20.23889, 19.37778, 21.52000, 13.00879, 16.16333, 13.60112, 13.01136, 13.55222)

EN <- c(1958, 1964, 1966, 1970, 1973, 1975, 1983, 1988, 1992, 1995, 1998, 2003, 2006, 2010, 2016)


plot(annual_max_mean$year, annual_max_mean$mean, xlab="Year", 
     ylab="Annual Summer Mean Temperature (°C)", col="#E69F00", pch = 19)
points(FFYy~FFYx, col = "black", add = TRUE, pch = 19)
abline(h = amm, col = "#009E73", add = TRUE, lwd = 3)
abline(v = EN, col = "#56B4E9", lwd = 1)
legend(("top"), legend = c("Bushfire Years", "Mean summer temperature", "El Nino years"),
       col = c("black", "#009E73", "#56B4E9"), pch = c(19))
par(new=T)
plot(rain$Year, rain$Annual, type="l", yaxt="n", xlab = "", ylab = "", col="#56B4E9")
axis(4, at=ticks.2, col.ticks="#56B4E9", col.axis="#56B4E9")








# The tMax threshold
# The current WMO standard climatology period is 1981-01-01 to 2010-12-31 and should be used when possible
# We rather use 1961-01-01 to 1990-01-01 as this is the oldest 30 year period available in the data
tMax_clim <- ts2clm(data = temp, x = t, y = tMax, climatologyPeriod = c("1957-01-01", "1986-12-31"), pctile = 90)
tMax_clim

# The tMin exceedance
# Note the use here of 'minDuration = 3' and 'maxGap = 1' as the default atmospheric arguments
# The default marine arguments are 'minDuration = 5' and 'maxGap = 2'
tMin_exc <- exceedance(data = temp, y = tMin, threshold = 19, minDuration = 3, maxGap = 1)$threshold
tMin_exc

# Note that because we calculated our 90th percentile threshold on a column named 'tMax' 
# and not the default column name 'temp', we must specify this below with 'y = tMax'
events <- detect_event(data = tMax_clim, y = tMax, # The 90th percentile threshold
                       threshClim2 = tMin_exc$exceedance) # The flat exceedance threshold

event_line(events)
events$temp


bubble_plot <- ggplot(data = events$event, aes(x = date_peak, y = intensity_max)) +
  geom_point(aes(size = intensity_cumulative), shape = 21, fill = "salmon", alpha = 0.8) +
  labs(x = NULL, y = "Maximum Intensity [?C] ", size = "Cumulative Intensity [?C x days]") +
  scale_size_continuous(range = c(1, 10),
                        guide = guide_legend(title.position = "top", direction = "horizontal")) +
  theme_bw() +
  theme(legend.position = c(0.3, 0.12),
        legend.box.background = element_rect(colour = "black"))

bubble_plot

# Don't forget to set 'event_line(y = tMax)'
ggarrange(event_line(events, y = tMax, metric = "intensity_max"),
          event_line(events, y = tMax, metric = "intensity_max", category = T),
          lolli_plot(events),
          bubble_plot,
          ncol = 2, nrow = 2, align = "hv")

events_one_event <- events_one_thresh$event
events_one_climatology <- events_one_thresh$climatology
# Join the two threshold dataframes
two_thresh <- left_join(events_one_climatology, thresh_tMax, by = c("t"))

# Remove all days that did not qualify as events in both thresholds
two_thresh_filtered <- two_thresh %>%
  filter(event.x == TRUE,
         event.y == TRUE)
# Copy data with a new name
events_one_thresh_filtered <- events_one_thresh

# Then filter
events_one_thresh_filtered$event <- events_one_thresh_filtered$event %>%
  filter(event_no %in% two_thresh_filtered$event_no.x)
###################

library(zoo)

# temp <- na.omit(temp_daily)

maxtemps <- temp_daily$tMax
maxtemps
maxtemps <- na.omit(maxtemps)
xx<-quantile(maxtemps, c(0.95))
xx

#extreme_heat <- which(rollapply(maxtemps, 3, function(x) min(x))>xx)[1]
#Use rle
extreme_heat = rle(maxtemps >= 32)
extreme_heat
myruns = which(extreme_heat$values == TRUE & extreme_heat$lengths >= 3)
any(myruns)

myruns

runs.lengths.cumsum = cumsum(extreme_heat$lengths)
ends = runs.lengths.cumsum[extreme_heat]
newindex = ifelse(myruns>1, myruns-1, 0)
starts = runs.lengths.cumsum[newindex] + 1
if (0 %in% newindex) starts = c(1,starts)
print(starts)
print(ends)

first <- temp_daily$anomaly_1

hist1 <- hist(temp_daily$anomaly_1,  breaks=seq(-13,24,by=0.5))
hist1
hist(temp_daily$anomaly_2, breaks = seq(-13.5, 27, by=0.5))

t.test(temp_daily$anomaly_1)
t.test(temp_daily$anomaly_2)
library(moments)
skewness(first)


rainfall<-rainfall$Annual
is.numeric(rainfall)
summary(rainfall)
hist(rainfall)
str(rainfall)
sd(rainfall)
min(rainfall)
max(rainfall)

quantile(rainfall, c(0.95))  #used for flooding variable
quantile(rainfall, c(0.90))  #used in bushfire in Victoria variable


temp<-temp$Annual
is.numeric(temp)
summary(temp)
hist(temp)
str(temp)
sd(temp)
min(temp)
max(temp)


daily_temp <-na.omit(daily_temp)
temp <- daily_temp$max

pretemp <- daily_temp[daily_temp$Year <= "1989" & daily_temp$Year >= "1960", ]
posttemp <- daily_temp[daily_temp$Year <= "2020" & daily_temp$Year >= "1990", ]

summer_pre <- pretemp[pretemp$Month == "12" | pretemp$Month == "1" | pretemp$Month == "2",]
summer_post <- posttemp[posttemp$Month == "12" | posttemp$Month == "1" | posttemp$Month == "2",]

hist(summer_post$max, col = "pink", add = TRUE)
hist(summer_pre$max, col = "lightblue")

summary(summer_pre$max)
summary(summer_post$max)

pre_mean <- mean(summer_pre$max)

anom <- summer_post$max - pre_mean

hist(anom)
min(anom)
#transform so values are > 0 for purposes of distribution
anom <- anom + 8

library(fitdistrplus)
plotdist(anom, histo = TRUE, demp = TRUE)
descdist(anom, boot = 1000)

fw <- fitdist(anom, "weibull")
summary(fw)
fg <- fitdist(anom, "gamma")
summary(fg)
fln <- fitdist(anom, "lnorm")
summary(fln)

par(mfrow = c(2, 2))
plot.legend <- c("Weibull", "lognormal", "gamma")
denscomp(list(fw, fln, fg), legendtext = plot.legend)
qqcomp(list(fw, fln, fg), legendtext = plot.legend)
cdfcomp(list(fw, fln, fg), legendtext = plot.legend)
ppcomp(list(fw, fln, fg), legendtext = plot.legend)

par(mfrow = c(1, 1))
library(actuar)
s.ll <-fitdist(anom, "llogis", start = list(shape = 1, scale = 500))
s.pr <-fitdist(anom, "pareto", start = list(shape = 1, scale = 500))
s.br <-fitdist(anom, "burr", start = list(shape1 = 0.3, shape2 = 1, rate = 1))
cdfcomp(list(fln,s.ll, s.pr, s.br, fw, fg), xlogscale = TRUE, ylogscale = TRUE, 
        legendtext = c("lognormal", "loglogistic", "Pareto", "Burr", "Weibull", "gamma"))

quantile(fw, probs = 0.05)
quantile(anom, probs = 0.05)
quantile(fg, probs = 0.05)
quantile(fln, probs = 0.05)






summer <- daily_temp[daily_temp$Month == 1 | daily_temp$Month == 2 | daily_temp$Month == 12, ]
head(summer)
jan= subset(daily_temp, Month=="1")
feb= subset(daily_temp, Month=="2")
march= subset(daily_temp, Month=="3")
april = subset(daily_temp, Month=="4")
may= subset(daily_temp, Month=="5")
jun= subset(daily_temp, Month=="6")
jul= subset(daily_temp, Month=="7")
aug= subset(daily_temp, Month=="8")
sep= subset(daily_temp, Month=="9")
oct= subset(daily_temp, Month=="10")
nov= subset(daily_temp, Month=="11")
dec= subset(daily_temp, Month=="12")

hist(daily_temp$max)

is.numeric(daily_temp$Month)
Month <-na.omit(temp$Month)

summer = subset(daily_temp, Month=="1"| Month=="2" | Month=="12")
summer
hist(summer$max)

autumn = subset(temp, Month=="3"| Month=="4" | Month=="5")
winter = subset(temp, Month=="6"| Month=="7" | Month=="8")
spring = subset(temp, Month=="9"| Month=="10" | Month=="11")
hist(autumn$max)
hist(winter$max)
hist(spring$max)
sprummer = subset(temp, Month =="9"| Month=="10" | Month=="11"| Month=="1"| Month=="2" | Month=="12")
hist(sprummer$max)
summary(summer$max)
summary(spring$max)
summary(sprummer$max)
sd(summer$max)
nrow(summer)

temp<-na.omit(daily_temp)
quantile(summer, c(0.90))

qqnorm(summer$max)
qqline(summer$max)

library(moments)
skewness(summer$max)

rgamma(13340,shape = 1.9, scale = 19.4)
x<-round(rgamma(13340, shape = 2, scale = 19.4),1)
hist(x)

library(fitdistrplus)
plotdist(summer$max, histo = TRUE, demp = TRUE)
descdist(summer$max, boot = 1000)
fw <- fitdist(summer$max, "weibull")
summary(fw)
fg <- fitdist(summer$max, "gamma")
summary(fg)
fln <- fitdist(summer$max, "lnorm")
summary(fln)

par(mfrow = c(2, 2))
plot.legend <- c("Weibull", "lognormal", "gamma")
denscomp(list(fw, fln, fg), legendtext = plot.legend)
qqcomp(list(fw, fln, fg), legendtext = plot.legend)
cdfcomp(list(fw, fln, fg), legendtext = plot.legend)
ppcomp(list(fw, fln, fg), legendtext = plot.legend)

library(psych)
geometric.mean(summer$max)


psummer<- summer$max
par(mfrow = c(1, 1))
library(actuar)
s.ll <-fitdist(summer, "llogis", start = list(shape = 1, scale = 500))
s.pr <-fitdist(summer, "pareto", start = list(shape = 1, scale = 500))
s.br <-fitdist(summer, "burr", start = list(shape1 = 0.3, shape2 = 1, rate = 1))
cdfcomp(list(fln,s.ll, s.pr, s.br, fw, fg), xlogscale = TRUE, ylogscale = TRUE, 
        legendtext = c("lognormal", "loglogistic", "Pareto", "Burr", "Weibull", "gamma"))
quantile(s.br, probs = 0.05)
quantile(summer, probs = 0.05)
quantile(fw, probs = 0.05)
quantile(fln, probs = 0.05)

turbidity<- turbidity$Point
turbidity$Point<-na.omit(turbidity)
is.numeric(turbidity)
hist(turbidity$Point)
summary(turbidity$Point)
str(turbidity$Point)
library(fitdistrplus)
plotdist(turbidity$Point, histo = TRUE, demp = TRUE)
descdist(turbidity$Point, boot = 1000)
class(turbidity)

fw <- fitdist(turbidity$Point, "weibull")
summary(fw)
fg <- fitdist(turbidity$Point, "gamma")
summary(fg)
fln <- fitdist(turbidity$Point, "lnorm")
summary(fln)

library(actuar)
t.ll <-fitdist(turbidity$Point, "llogis", start = list(shape = 1, scale = 500))
t.pr <-fitdist(turbidity$Point, "pareto", start = list(shape = 1, scale = 500))
t.br <-fitdist(turbidity$Point, "burr", start = list(shape1 = 0.3, shape2 = 1, rate = 1))
cdfcomp(list(fln,t.ll, t.pr, t.br, fw), xlogscale = TRUE, ylogscale = TRUE, 
        legendtext = c("lognormal", "loglogistic", "Pareto", "Burr", "Weibull"))
quantile(t.br, probs = 0.05)
quantile(turbidity$Point, probs = 0.05)
quantile(fw, probs = 0.05)
quantile(fln, probs = 0.05)

sd(turbidity$Point)
library(psych)
geometric.mean(turbidity$Point)
sd(turbidity$Point)
