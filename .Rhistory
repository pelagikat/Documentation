'Disability'->'Vulnerable people' 'Water quality'->'Vulnerable people'
}
")
grViz("
digraph {
graph[layout = dot, rankdir = LR]
node[shape = box, fontname = Arial]
'Safer healthier people'; 'Vulnerable people'
node[shape = oval, fontname = Arial]
'Biodiversity'; 'Higher income'; 'Bushfire safety'; 'Water quality'; 'Wastewater disease burden';
'Healthcare access'; 'Climate risk'; 'Lower income'; 'Road accidents'; 'Disability'
# edge statements
'Biodiversity'->'Safer healthier people' 'Higher income'->'Safer healthier people'
'Bushfire safety'->'Safer healthier people'
'Safer healthier people'->'Vulnerable people' 'Vulnerable people'->'Safer healthier people'
'Wastewater disease burden'->'Vulnerable people' 'Healthcare access'->'Vulnerable people'
'Climate risk'->'Vulnerable people' 'Lower income'->'Vulnerable people' 'Road accidents'->'Vulnerable people'
'Disability'->'Vulnerable people' 'Water quality'->'Vulnerable people'
}
")
grViz("
digraph {
graph[layout = dot, rankdir = TB]
node[shape = box, fontname = Arial]
'Safer healthier people'; 'Vulnerable people'
node[shape = oval, fontname = Arial]
'Biodiversity'; 'Higher income'; 'Bushfire safety'; 'Water quality'; 'Wastewater disease burden';
'Healthcare access'; 'Climate risk'; 'Lower income'; 'Road accidents'; 'Disability'
# edge statements
'Biodiversity'->'Safer healthier people' 'Higher income'->'Safer healthier people'
'Bushfire safety'->'Safer healthier people'
'Safer healthier people'->'Vulnerable people' 'Vulnerable people'->'Safer healthier people'
'Wastewater disease burden'->'Vulnerable people' 'Healthcare access'->'Vulnerable people'
'Climate risk'->'Vulnerable people' 'Lower income'->'Vulnerable people' 'Road accidents'->'Vulnerable people'
'Disability'->'Vulnerable people' 'Water quality'->'Vulnerable people'
}
")
grViz("
digraph {
graph[layout = dot, rankdir = LR]
node[shape = box, fontname = Arial]
'Safer healthier people'; 'Vulnerable people'
node[shape = oval, fontname = Arial]
'Biodiversity'; 'Higher income'; 'Bushfire safety'; 'Water quality'; 'Wastewater disease burden';
'Healthcare access'; 'Climate risk'; 'Lower income'; 'Road accidents'; 'Disability'
# edge statements
'Biodiversity'->'Safer healthier people' 'Higher income'->'Safer healthier people'
'Bushfire safety'->'Safer healthier people'
'Safer healthier people'->'Vulnerable people' 'Vulnerable people'->'Safer healthier people'
'Wastewater disease burden'->'Vulnerable people' 'Healthcare access'->'Vulnerable people'
'Climate risk'->'Vulnerable people' 'Lower income'->'Vulnerable people' 'Road accidents'->'Vulnerable people'
'Disability'->'Vulnerable people' 'Water quality'->'Vulnerable people'
}
")
grViz("
digraph {
graph[layout = neato, rankdir = LR]
node[shape = box, fontname = Arial]
'Safer healthier people'; 'Vulnerable people'
node[shape = oval, fontname = Arial]
'Biodiversity'; 'Higher income'; 'Bushfire safety'; 'Water quality'; 'Wastewater disease burden';
'Healthcare access'; 'Climate risk'; 'Lower income'; 'Road accidents'; 'Disability'
# edge statements
'Biodiversity'->'Safer healthier people' 'Higher income'->'Safer healthier people'
'Bushfire safety'->'Safer healthier people'
'Safer healthier people'->'Vulnerable people' 'Vulnerable people'->'Safer healthier people'
'Wastewater disease burden'->'Vulnerable people' 'Healthcare access'->'Vulnerable people'
'Climate risk'->'Vulnerable people' 'Lower income'->'Vulnerable people' 'Road accidents'->'Vulnerable people'
'Disability'->'Vulnerable people' 'Water quality'->'Vulnerable people'
}
")
grViz("
digraph {
graph[layout = dot, rankdir = LR]
node[shape = box, fontname = Arial]
'Safer healthier people'; 'Vulnerable people'
node[shape = oval, fontname = Arial]
'Biodiversity'; 'Higher income'; 'Bushfire safety'; 'Water quality'; 'Wastewater disease burden';
'Healthcare access'; 'Climate risk'; 'Lower income'; 'Road accidents'; 'Disability'
# edge statements
'Biodiversity'->'Safer healthier people' 'Higher income'->'Safer healthier people'
'Bushfire safety'->'Safer healthier people'
'Safer healthier people'->'Vulnerable people' 'Vulnerable people'->'Safer healthier people'
'Wastewater disease burden'->'Vulnerable people' 'Healthcare access'->'Vulnerable people'
'Climate risk'->'Vulnerable people' 'Lower income'->'Vulnerable people' 'Road accidents'->'Vulnerable people'
'Disability'->'Vulnerable people' 'Water quality'->'Vulnerable people'
}
")
grViz("
digraph {
graph[layout = dot, rankdir = LR]
node[shape = box, fontname = Arial]
'Safer healthier people'; 'Vulnerable people'
node[shape = oval, fontname = Arial]
'Biodiversity'; 'Higher income'; 'Bushfire safety'; 'Water quality'; 'Wastewater disease burden';
'Healthcare access'; 'Climate risk'; 'Lower income'; 'Road accidents'; 'Disability'
# edge statements
'Safer healthier people'->'Vulnerable people' 'Vulnerable people'->'Safer healthier people'
'Wastewater disease burden'->'Vulnerable people' 'Healthcare access'->'Vulnerable people'
'Climate risk'->'Vulnerable people' 'Lower income'->'Vulnerable people' 'Road accidents'->'Vulnerable people'
'Disability'->'Vulnerable people' 'Water quality'->'Vulnerable people'
'Biodiversity'->'Safer healthier people' 'Higher income'->'Safer healthier people'
'Bushfire safety'->'Safer healthier people'
}
")
grViz("
digraph {
graph[layout = dot, rankdir = LR]
node[shape = box, fontname = Arial, fillcolor = 'lavender']
'Safer healthier people'; 'Vulnerable people'
node[shape = oval, fontname = Arial]
'Biodiversity'; 'Higher income'; 'Bushfire safety'; 'Water quality'; 'Wastewater disease burden';
'Healthcare access'; 'Climate risk'; 'Lower income'; 'Road accidents'; 'Disability'
# edge statements
'Safer healthier people'->'Vulnerable people' 'Vulnerable people'->'Safer healthier people'
'Wastewater disease burden'->'Vulnerable people' 'Healthcare access'->'Vulnerable people'
'Climate risk'->'Vulnerable people' 'Lower income'->'Vulnerable people' 'Road accidents'->'Vulnerable people'
'Disability'->'Vulnerable people' 'Water quality'->'Vulnerable people'
'Biodiversity'->'Safer healthier people' 'Higher income'->'Safer healthier people'
'Bushfire safety'->'Safer healthier people'
}
")
grViz("
digraph {
graph[layout = dot, rankdir = LR]
node[shape = box, fontname = Arial, fillcolor = 'thistle']
'Safer healthier people'; 'Vulnerable people'
node[shape = oval, fontname = Arial]
'Biodiversity'; 'Higher income'; 'Bushfire safety'; 'Water quality'; 'Wastewater disease burden';
'Healthcare access'; 'Climate risk'; 'Lower income'; 'Road accidents'; 'Disability'
# edge statements
'Safer healthier people'->'Vulnerable people' 'Vulnerable people'->'Safer healthier people'
'Wastewater disease burden'->'Vulnerable people' 'Healthcare access'->'Vulnerable people'
'Climate risk'->'Vulnerable people' 'Lower income'->'Vulnerable people' 'Road accidents'->'Vulnerable people'
'Disability'->'Vulnerable people' 'Water quality'->'Vulnerable people'
'Biodiversity'->'Safer healthier people' 'Higher income'->'Safer healthier people'
'Bushfire safety'->'Safer healthier people'
}
")
library(DiagrammeR)
grViz("
digraph {
graph[layout = dot, rankdir = LR]
node[shape = box, fontname = Arial]
'Safer healthier people'; 'Vulnerable people'
node[shape = oval, fontname = Arial]
'Biodiversity'; 'Higher income'; 'Bushfire safety'; 'Water quality'; 'Wastewater disease burden';
'Healthcare access'; 'Climate risk'; 'Lower income'; 'Road accidents'; 'Disability'
# edge statements
'Safer healthier people'->'Vulnerable people' 'Vulnerable people'->'Safer healthier people'
'Wastewater disease burden'->'Vulnerable people' 'Healthcare access'->'Vulnerable people'
'Climate risk'->'Vulnerable people' 'Lower income'->'Vulnerable people' 'Road accidents'->'Vulnerable people'
'Disability'->'Vulnerable people' 'Water quality'->'Vulnerable people'
'Biodiversity'->'Safer healthier people' 'Higher income'->'Safer healthier people'
'Bushfire safety'->'Safer healthier people'
}
")
library(DiagrammeR)
grViz("
digraph {
graph[layout = dot, rankdir = LR]
node[shape = box, fontname = Arial]
'Internet service demand'; 'Fixed wireless towers'; 'Internet service capacity'
node[shape = oval, fontname = Arial]
'Business demand'; 'Residential demand'
# edge statements
'Business demand'->'Internet service demand' 'Residential demand'->'Internet service demand'
'Internet service capacity'->'Internet service demand' 'Internet service demand'->'Fixed wireless towers'
'Fixed wireless towers'->'Internet service capacity'
}
")
library(DiagrammeR)
grViz("
digraph {
graph[layout = dot, rankdir = TB]
node[shape = box, fontname = Arial]
'Internet service demand'; 'Fixed wireless towers'; 'Internet service capacity'
node[shape = oval, fontname = Arial]
'Business demand'; 'Residential demand'
# edge statements
'Business demand'->'Internet service demand' 'Residential demand'->'Internet service demand'
'Internet service capacity'->'Internet service demand' 'Internet service demand'->'Fixed wireless towers'
'Fixed wireless towers'->'Internet service capacity'
}
")
library(DiagrammeR)
library(DiagrammeR)
grViz("
digraph {
graph[layout = dot, rankdir = TB]
node[shape = box, fontname = Arial]
'Funding'; 'Build in progress'; 'Completed infrastructure'
node[shape = oval, fontname = Arial]
'Time delay'
# edge statements
'Funding'->'Build in progress' 'Build in progress'->'Completed infrastructure'
'Time delay'->'Funding' 'Time delay'->'Build in progress'
}
")
library(DiagrammeR)
grViz("
digraph {
graph[layout = dot, rankdir = LR]
node[shape = box, fontname = Arial]
'Funding'; 'Build in progress'; 'Completed infrastructure'
node[shape = oval, fontname = Arial]
'Time delay'
# edge statements
'Funding'->'Build in progress' 'Build in progress'->'Completed infrastructure'
'Time delay'->'Funding' 'Time delay'->'Build in progress'
}
")
library(DiagrammeR)
grViz("
digraph {
graph[layout = dot, rankdir = LR]
node[shape = box, fontname = Arial]
'Road quality'
node[shape = oval, fontname = Arial]
'Flooding'; 'Maintenance'; 'Age'; 'Load'; 'Car use'; 'Bus trips'; 'Bus frequency'; 'Travel equity';
'People with reduced mobility'; 'Potential bus demand'; 'Population'; 'Bus shortfall'
# edge statements
'Flooding'->'Road quality' 'Maintenance'->'Road quality' 'Age'->'Road quality' 'Load'->'Road quality'
'Bus trips'->'Load' 'Car use'->'Load' 'Bus frequency'->'Bus trips' 'Bus frequency'->'Travel equity'
'People with reduced mobility'->'Travel equity' 'Bus frequency'->'Bus shortfall'
'Potential bus demand'->'Bus shortfall' 'Population'->'Potential bus demand'
}
")
library(DiagrammeR)
grViz("
digraph {
graph[layout = dot, rankdir = TB]
node[shape = box, fontname = Arial]
'Road quality'
node[shape = oval, fontname = Arial]
'Flooding'; 'Maintenance'; 'Age'; 'Load'; 'Car use'; 'Bus trips'; 'Bus frequency'; 'Travel equity';
'People with reduced mobility'; 'Potential bus demand'; 'Population'; 'Bus shortfall'
# edge statements
'Flooding'->'Road quality' 'Maintenance'->'Road quality' 'Age'->'Road quality' 'Load'->'Road quality'
'Bus trips'->'Load' 'Car use'->'Load' 'Bus frequency'->'Bus trips' 'Bus frequency'->'Travel equity'
'People with reduced mobility'->'Travel equity' 'Bus frequency'->'Bus shortfall'
'Potential bus demand'->'Bus shortfall' 'Population'->'Potential bus demand'
}
")
library(DiagrammeR)
grViz("
digraph {
graph[layout = dot, rankdir = TB]
node[shape = box, fontname = Arial]
'Road quality'
node[shape = oval, fontname = Arial]
'Flooding'; 'Maintenance'; 'Age'; 'Load'; 'Car use'; 'Bus trips'; 'Bus frequency'; 'Travel equity';
'People with reduced mobility'; 'Potential bus demand'; 'Population'; 'Bus shortfall'
# edge statements
'Flooding'->'Road quality' 'Maintenance'->'Road quality' 'Age'->'Road quality' 'Load'->'Road quality'
'Bus trips'->'Load' 'Car use'->'Load' 'Bus frequency'->'Bus trips' 'Bus frequency'->'Travel equity'
'People with reduced mobility'->'Travel equity' 'Bus frequency'->'Bus shortfall'
'Potential bus demand'->'Bus shortfall' 'Population'->'Potential bus demand' 'Bus shortfall'->'Travel equity'
}
")
x_year <- c(2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016)
y_fraction <- c(1.80, 1.34, 1.46, 1.58, 1.00, 1.31, 1.81, 1.25, 1.45, 1.09)
production <- data.frame(x_year, y_fraction)
### Linear model
library(tidyverse)
library(ggpubr)
ggplot(production, aes(x = x_year, y = y_fraction)) +
geom_point(col = "blue") +
geom_smooth(method = "lm", col = "blue")
plot(y_fraction~x_year)
lm(y_fraction~x_year)
ggplot(production, aes(x = x_year, y = y_fraction)) +
geom_point(col = "blue") +
geom_smooth(method = "lm", col = "blue")
ggplot(production, aes(x = x_year, y = y_fraction)) +
geom_point(col = "blue") +
geom_smooth(method = "lm", col = "blue") +
xlab(Year) + ylab(Productivity fraction over baseline)
ggplot(production, aes(x = x_year, y = y_fraction)) +
geom_point(col = "blue") +
geom_smooth(method = "lm", col = "blue") +
xlab("Year") + ylab("Productivity fraction over baseline")
ggplot(production, aes(x = x_year, y = y_fraction)) +
geom_point(col = "blue") +
geom_smooth(method = "lm", col = "blue") +
xlab("Year") + ylab("Productivity fraction over baseline") +
ggtitle("Regenerative agriculture impact on productivity")
library(readr)
CapeGrim_CO2_data_download <- read_csv("C:/Users/szeteyka/OneDrive - Deakin University/PhD/Data/CO2/CapeGrim_CO2_data_download.csv")
View(CapeGrim_CO2_data_download)
library(ggplot2)
library(scales)
library(ggthemes)
library(tidyverse)
library(gridExtra)
library(lubridate)
library(mgcv)
co2 <- CapeGrim_CO2_data_download
co2 <- co2 %>%
filter(YYYY %in% (1990:2020))
co2
co2_plot <- ggplot(co2, aes(DATE, `CO2(ppm)`)) +
geom_point(na.rm = TRUE)
co2_plot
co2_trend <- co2_plot + stat_smooth(colour="green")
co2_trend
library(ggpubr)
library(ggpmisc)
library(dplyr)
ggplot(co2, aes(x = `DATE`)) +
geom_point(aes(y = `CO2(ppm)`), col = "blue") +
geom_smooth(aes(y = `CO2(ppm)`),  method = "lm", col = "blue")
mean(co2$`CO2(ppm)`)
lm(co2$`CO2(ppm)`~co2$DATE)
plot(lm(co2$`CO2(ppm)`~co2$DATE))
lm(co2$`CO2(ppm)`~co2$DATE)
ggplot(co2, aes(x = `DATE`)) +
geom_point(aes(y = `CO2(ppm)`), col = "blue") +
geom_smooth(aes(y = `CO2(ppm)`),  method = "lm", col = "blue")
co2
co2_plot <- ggplot(co2, aes(DATE, `CO2(ppm)`)) +
geom_point(na.rm = TRUE)
co2_plot
co2_trend <- co2_plot + stat_smooth(colour="green")
co2_trend
ggplot(co2, aes(x = `DATE`)) +
geom_point(aes(y = `CO2(ppm)`), col = "blue") +
geom_smooth(aes(y = `CO2(ppm)`),  method = "lm", col = "blue") +
ggtitle(CO2 observations from Cape Grim 1990-2020)
ggplot(co2, aes(x = `DATE`)) +
geom_point(aes(y = `CO2(ppm)`), col = "blue") +
geom_smooth(aes(y = `CO2(ppm)`),  method = "lm", col = "blue") +
ggtitle("CO2 observations from Cape Grim 1990-2020")
mean(co2$`CO2(ppm)`)
co2 <- CapeGrim_CO2_data_download
co2
co2_plot <- ggplot(co2, aes(DATE, `CO2(ppm)`)) +
geom_point(na.rm = TRUE)
co2_plot
co2_trend <- co2_plot + stat_smooth(colour="green")
co2_trend
ggplot(co2, aes(x = `DATE`)) +
geom_point(aes(y = `CO2(ppm)`), col = "blue") +
geom_smooth(aes(y = `CO2(ppm)`),  method = "lm", col = "blue") +
ggtitle("CO2 observations from Cape Grim 1976-2020")
mean(co2$`CO2(ppm)`)
co2 <- co2 %>%
filter(YYYY %in% (1976:2020))
co2
co2_plot <- ggplot(co2, aes(DATE, `CO2(ppm)`)) +
geom_point(na.rm = TRUE)
co2_plot
co2_trend <- co2_plot + stat_smooth(colour="green")
co2_trend
ggplot(co2, aes(x = `DATE`)) +
geom_point(aes(y = `CO2(ppm)`), col = "blue") +
geom_smooth(aes(y = `CO2(ppm)`),  method = "lm", col = "blue") +
ggtitle("CO2 observations from Cape Grim 1976-2020")
mean(co2$`CO2(ppm)`)
co2 <- co2 %>%
filter(YYYY %in% (1976:2020)) %>%
group_by(YYYY) %>%
summarise(avg = mean(`CO2(ppm)`)) %>%
arrange(avg)
co2
co2_plot <- ggplot(co2, aes(YYYY, avg)) +
geom_point(na.rm = TRUE)
co2_plot
co2_trend <- co2_plot + stat_smooth(colour="green")
co2_trend
ggplot(co2, aes(x = YYYY)) +
geom_point(aes(y = avg), col = "blue") +
geom_smooth(aes(y = avg),  method = "lm", col = "blue") +
ggtitle("CO2 observations from Cape Grim 1976-2020")
mean(co2$avg)
lm(co2$avg~co2$YYYY)
co2 <- co2 %>%
filter(YYYY %in% (1976:2020))
co2
co2 <- CapeGrim_CO2_data_download
co2 <- co2 %>%
filter(YYYY %in% (1976:2020))
co2
co2_plot <- ggplot(co2, aes(`DATE`, `CO2(ppm)`)) +
geom_point(na.rm = TRUE)
co2_plot
co2_trend <- co2_plot + stat_smooth(colour="green")
co2_trend
ggplot(co2, aes(x = `DATE`)) +
geom_point(aes(y = `CO2(ppm)`), col = "blue") +
geom_smooth(aes(y = `CO2(ppm)`),  method = "lm", col = "blue") +
ggtitle("CO2 observations from Cape Grim 1976-2020")
mean(co2$`CO2(ppm)`)
lm(co2$`CO2(ppm)`~co2$DATE)
library(readr)
Cape_Otway_Daily <- read_csv("C:/Users/szeteyka/OneDrive - Deakin University/PhD/Data/Temperature/Cape Otway/Cape_Otway_Daily.csv")
View(Cape_Otway_Daily)
library(tidyverse)
library(tidyverse)
Cape_Otway_Daily$date <-
Cape_Otway_Daily %>%
mutate(date = make_datetime(Year, Month, Day))
str(Cape_Otway_Daily)
temp.year.sum <- Cape_Otway_Daily %>%
group_by(Year) %>%
dplyr::summarise(mean(tMax, na.rm = TRUE))
temp.year.sum
baseline <- temp.year.sum %>%
filter(Year < 1980)
mean(baseline$`mean(tMax, na.rm = TRUE)`)
temp30yr <- temp.year.sum %>%
filter(between(Year, 1990, 2020 ))
temp30yr
ggplot(temp30yr, aes(x = Year)) +
geom_point(aes(y = `mean(tMax, na.rm = TRUE)`), col = "blue") +
geom_smooth(aes(y = `mean(tMax, na.rm = TRUE)`),  method = "lm", col = "blue") +
ggtitle(Mean annual max temperature at Cape Otway weather station)
ggplot(temp30yr, aes(x = Year)) +
geom_point(aes(y = `mean(tMax, na.rm = TRUE)`), col = "blue") +
geom_smooth(aes(y = `mean(tMax, na.rm = TRUE)`),  method = "lm", col = "blue") +
ggtitle("Mean annual max temperature at Cape Otway weather station")
ggplot(temp30yr, aes(x = Year)) +
geom_point(aes(y = `mean(tMax, na.rm = TRUE)`), col = "blue") +
geom_smooth(aes(y = `mean(tMax, na.rm = TRUE)`),  method = "lm", col = "blue") +
ggtitle("Mean annual max temperature at Cape Otway weather station") +
ylab("Mean annual max temp °C")
plot(temp30yr$`mean(tMax, na.rm = TRUE)`~ temp30yr$Year)
temp.lm <- lm(temp30yr$`mean(tMax, na.rm = TRUE)`~ temp30yr$Year)
abline(temp.lm, col = "red")
temp.lm
Cape_Otway_Daily$date <-
Cape_Otway_Daily %>%
mutate(date = make_datetime(Year, Month, Day))
library(readr)
Cape_Otway_Daily <- read_csv("C:/Users/szeteyka/OneDrive - Deakin University/PhD/Data/Temperature/Cape Otway/Cape_Otway_Daily.csv")
View(Cape_Otway_Daily)
library(tidyverse)
Cape_Otway_Daily$date <-
Cape_Otway_Daily %>%
mutate(date = make_datetime(Year, Month, Day))
library(lubridate)
Cape_Otway_Daily$date <-
Cape_Otway_Daily %>%
mutate(date = make_datetime(Year, Month, Day))
str(Cape_Otway_Daily)
temp.year.sum <- Cape_Otway_Daily %>%
group_by(Year) %>%
dplyr::summarise(mean(tMax, na.rm = TRUE))
temp.year.sum
temp30yr <- temp.year.sum %>%
filter(between(Year, 1990, 2020 ))
temp30yr
ggplot(temp30yr, aes(x = Year)) +
geom_point(aes(y = `mean(tMax, na.rm = TRUE)`), col = "blue") +
geom_smooth(aes(y = `mean(tMax, na.rm = TRUE)`),  method = "lm", col = "blue") +
ggtitle("Mean annual max temperature at Cape Otway weather station") +
ylab("°C")
plot(temp30yr$`mean(tMax, na.rm = TRUE)`~ temp30yr$Year)
temp.lm <- lm(temp30yr$`mean(tMax, na.rm = TRUE)`~ temp30yr$Year)
abline(temp.lm, col = "red")
temp.lm
temp.lm <- lm(temp30yr$`mean(tMax, na.rm = TRUE)`~ temp30yr$Year)
temp.lm
library(readr)
Rainfall_Pennyroyal <- read_csv("C:/Users/szeteyka/OneDrive - Deakin University/PhD/Data/Rainfall/Rainfall_Pennyroyal.csv")
View(Rainfall_Pennyroyal)
rain <- Rainfall_Pennyroyal
rain
rain_plot <- ggplot(rain, aes(Year, Annual)) +
geom_point(na.rm = TRUE)
rain_plot
rain_trend <- rain_plot + stat_smooth(colour="green")
rain_trend
ggplot(Forrest_Modelled_Temps, aes(x = Year)) +
geom_line(aes(y = Avg), color = "darkblue") +
geom_point() + geom_smooth(method = "lm") +
geom_point(alpha=0)
rain30yr <- rain %>%
filter(between(Year, 1990, 2020 ))
rain30yr
rain30yr
ggplot(rain30yr, aes(x = Year)) +
geom_point(aes(y = Annual), col = "blue") +
geom_smooth(aes(y = Annual),  method = "lm", col = "blue") +
ggtitle("Annual rainfall at Pennyroyal weather station") +
ylab("Rainfall (mm")
rain.lm <- lm(rain30yr$Annual ~ rain30yr$Year)
rain.lm
library(readr)
FFDI <- read_csv("C:/Users/szeteyka/OneDrive - Deakin University/PhD/Data/Fires/FFDI.csv")
View(FFDI)
FFDI$year <- year(FFDI$date)
ffdi.year.sum <- FFDI %>%
group_by(year) %>%  # group by year
dplyr::summarise(mean(ffdi_mean, na.rm=TRUE))
ffdi.year.sum
ffdi30yr <- ffdi.year.sum %>%
filter(between(year, 1990, 2020 ))
ffdi30yr <- ffdi.year.sum %>%
filter(between(year, 1990, 2020 ))
ffdi30yr
means30yr <- ffdi30yr$`mean(ffdi_mean, na.rm = TRUE)`
ggplot(ffdi30yr, aes(x = year)) +
geom_point(aes(y = means30yr), col = "blue") +
geom_smooth(aes(y = means30yr),  method = "lm", col = "blue")
ggplot(ffdi30yr, aes(x = year)) +
geom_point(aes(y = means30yr), col = "blue") +
geom_smooth(aes(y = means30yr),  method = "lm", col = "blue") +
ggtitle("Annual mean Forest Fire Danger Index for Forrest") +
ylab("FFDI")
ffdi30.lm <- lm(means30yr ~ ffdi30yr$year)
ffdi30.lm
